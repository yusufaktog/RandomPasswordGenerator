
import java.awt.Color;
import java.util.LinkedList;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author joseph
 */
public class PasswordGeneratorFrame extends javax.swing.JFrame {

    List<String> components;
    RandomPasswordGenerator generator;
    static Integer remainingComponentNumber;

    public PasswordGeneratorFrame() {
        initComponents();
        components = new LinkedList<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkBoxesGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        numbersLabel = new javax.swing.JLabel();
        symbolsLabel = new javax.swing.JLabel();
        lowercaseLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        uppercaseLabel = new javax.swing.JLabel();
        passwordLengthText = new javax.swing.JTextField();
        numbersCheckBox = new javax.swing.JCheckBox();
        symbolsCheckBox = new javax.swing.JCheckBox();
        lowercaseCheckBox = new javax.swing.JCheckBox();
        uppercaseCheckBox = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        generatedPasswordText = new javax.swing.JTextField();
        generatePasswordButton = new javax.swing.JButton();
        messageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Password Generator");
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(500, 200, 0, 0));

        numbersLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        numbersLabel.setForeground(java.awt.Color.black);
        numbersLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        numbersLabel.setText("Numbers:");

        symbolsLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        symbolsLabel.setForeground(java.awt.Color.black);
        symbolsLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        symbolsLabel.setText("Symbols:");
        symbolsLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lowercaseLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lowercaseLabel.setForeground(java.awt.Color.black);
        lowercaseLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lowercaseLabel.setText("Lowercase Letters:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setForeground(java.awt.Color.black);
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Password Length:");

        uppercaseLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        uppercaseLabel.setForeground(java.awt.Color.black);
        uppercaseLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        uppercaseLabel.setText("Uppercase Letters");

        numbersCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numbersCheckBoxActionPerformed(evt);
            }
        });

        symbolsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                symbolsCheckBoxActionPerformed(evt);
            }
        });

        lowercaseCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lowercaseCheckBoxActionPerformed(evt);
            }
        });

        uppercaseCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uppercaseCheckBoxActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setForeground(java.awt.Color.black);
        jLabel7.setText("Generated Password:");

        generatedPasswordText.setEditable(false);

        generatePasswordButton.setBackground(new java.awt.Color(255, 153, 153));
        generatePasswordButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        generatePasswordButton.setForeground(new java.awt.Color(153, 51, 255));
        generatePasswordButton.setText("Generate Password");
        generatePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generatePasswordButtonActionPerformed(evt);
            }
        });

        messageLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        messageLabel.setForeground(new java.awt.Color(255, 0, 0));
        messageLabel.setText("Please select the components you want to have in your password.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numbersLabel)
                            .addComponent(symbolsLabel)
                            .addComponent(lowercaseLabel)
                            .addComponent(uppercaseLabel)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(generatePasswordButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(passwordLengthText)
                            .addComponent(numbersCheckBox)
                            .addComponent(symbolsCheckBox)
                            .addComponent(lowercaseCheckBox)
                            .addComponent(uppercaseCheckBox)
                            .addComponent(generatedPasswordText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)))
                    .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numbersLabel)
                    .addComponent(numbersCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(symbolsLabel)
                    .addComponent(symbolsCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lowercaseLabel)
                    .addComponent(lowercaseCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uppercaseLabel)
                    .addComponent(uppercaseCheckBox))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(passwordLengthText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(generatedPasswordText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(generatePasswordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(109, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generatePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generatePasswordButtonActionPerformed
        int length, upperBound, lowerBound;
        String message = "";
        
        if(components.isEmpty()){
            messageLabel.setText("Please select at least one of the components...");
            return;
        }
        
        try {
            length = Integer.valueOf(passwordLengthText.getText());
            generator = new RandomPasswordGenerator(length);
            remainingComponentNumber = components.size();
            for (int i = 0; i < components.size(); i++) {
                lowerBound = Integer.valueOf(components.get(i).substring(0, 2));//first two numbers 
                upperBound = Integer.valueOf(components.get(i).substring(2, 4));//last two numbers
                generator.generate(lowerBound, upperBound, (components.size() - i == 1) ); // is it the end of the loop  
                remainingComponentNumber--;
            }
            generator.shuffleThePassword();
            generatedPasswordText.setText(generator.getPassword());

        }catch(NumberFormatException e){
            messageLabel.setText("Invalid length...");
        }

    }//GEN-LAST:event_generatePasswordButtonActionPerformed
    private void storeComponent(String component) {
        if(components.contains(component))
            components.remove(component);
        else
            components.add(component);
    }
    private void changeForeGround(javax.swing.JLabel label){
        if(label.getForeground() == Color.BLACK)
            label.setForeground(Color.RED);
        else
            label.setForeground(Color.BLACK);
    }
    private void numbersCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numbersCheckBoxActionPerformed
        storeComponent("4810");changeForeGround(numbersLabel); // ASCII table beginIndex,EndIndex 48 - 58 (0123456789)
    }//GEN-LAST:event_numbersCheckBoxActionPerformed

    private void lowercaseCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowercaseCheckBoxActionPerformed
        storeComponent("9726");changeForeGround(lowercaseLabel);
    }//GEN-LAST:event_lowercaseCheckBoxActionPerformed

    private void uppercaseCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uppercaseCheckBoxActionPerformed
        storeComponent("6526");changeForeGround(uppercaseLabel);
    }//GEN-LAST:event_uppercaseCheckBoxActionPerformed

    private void symbolsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_symbolsCheckBoxActionPerformed
        storeComponent("3315");changeForeGround(symbolsLabel);
    }//GEN-LAST:event_symbolsCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasswordGeneratorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasswordGeneratorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasswordGeneratorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasswordGeneratorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PasswordGeneratorFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup checkBoxesGroup;
    private javax.swing.JButton generatePasswordButton;
    private javax.swing.JTextField generatedPasswordText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JCheckBox lowercaseCheckBox;
    private javax.swing.JLabel lowercaseLabel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JCheckBox numbersCheckBox;
    private javax.swing.JLabel numbersLabel;
    private javax.swing.JTextField passwordLengthText;
    private javax.swing.JCheckBox symbolsCheckBox;
    private javax.swing.JLabel symbolsLabel;
    private javax.swing.JCheckBox uppercaseCheckBox;
    private javax.swing.JLabel uppercaseLabel;
    // End of variables declaration//GEN-END:variables
}
